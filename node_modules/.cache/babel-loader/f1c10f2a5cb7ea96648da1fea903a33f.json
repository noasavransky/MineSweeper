{"ast":null,"code":"import _defineProperty from\"C:\\\\hometaskwix\\\\2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\hometaskwix\\\\2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\hometaskwix\\\\2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\hometaskwix\\\\2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"C:\\\\hometaskwix\\\\2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"C:\\\\hometaskwix\\\\2\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React from'react';import'../App.css';import win from'../images/win.png';import lose from'../images/lose.png';import go from'../images/go.png';import mines from'../images/bomb.png';import width from'../images/width.png';import height from'../images/height.png';import flags from'../images/flags.png';var GameHeader=/*#__PURE__*/function(_React$Component){_inherits(GameHeader,_React$Component);var _super=_createSuper(GameHeader);function GameHeader(props){var _this;_classCallCheck(this,GameHeader);_this=_super.call(this,props);_this.state={width:10,height:10,mines:10};_this.GameStatus=_this.GameStatus.bind(_assertThisInitialized(_this));_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.handleStart=_this.handleStart.bind(_assertThisInitialized(_this));return _this;}_createClass(GameHeader,[{key:\"GameStatus\",value:function GameStatus(){var _this2=this;var elem;var picMap={win:win,lose:lose,width:width,height:height,mines:mines};if(this.props.status===\"pre\"){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,\"Mine Sweeper \",/*#__PURE__*/React.createElement(\"img\",{src:mines,className:\"Head-pic\"})),this.StartNewGame());}if(this.props.status===\"win\"||this.props.status===\"lose\"){elem=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,\"You \",this.props.status.toUpperCase(),\"!\",/*#__PURE__*/React.createElement(\"img\",{src:picMap[this.props.status],className:\"Win-pic\",alt:this.props.status})),this.StartNewGame());}else{var flagsCount=this.props.mines-(this.props.flags.good+this.props.flags.bad);elem=/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h1\",null,[\"Height\",\"Width\",\"Mines\"].map(function(curr){return/*#__PURE__*/React.createElement(\"span\",{className:\"Header-title\"},/*#__PURE__*/React.createElement(\"img\",{src:picMap[curr.toLowerCase()],className:\"Header-pic\",alt:curr}),\" \",curr,\" \",_this2.props[curr.toLowerCase()]);}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",{className:\"Header-title\"},/*#__PURE__*/React.createElement(\"img\",{src:flags,className:\"Header-pic\",alt:\"flags\"}),\" Remaining Flags \",flagsCount)));}return elem;}},{key:\"StartNewGame\",value:function StartNewGame(){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h3\",null,\"Do you want to start a new game?\"),/*#__PURE__*/React.createElement(\"span\",{className:\"Header-title\"},\"Board Width: \",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",value:this.state.width,name:\"width\",min:\"0\",max:\"300\",onChange:this.handleChange,className:\"Game-input\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"Header-title\"},\"Board Height: \",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",value:this.state.height,name:\"height\",min:\"0\",max:\"300\",onChange:this.handleChange,className:\"Game-input\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"Header-title\"},\"Mines: \",/*#__PURE__*/React.createElement(\"input\",{type:\"number\",value:this.state.mines,name:\"mines\",min:\"0\",max:this.state.width*this.state.height,onChange:this.handleChange,className:\"Game-input\"})),/*#__PURE__*/React.createElement(\"div\",{onClick:this.handleStart},/*#__PURE__*/React.createElement(\"h2\",null,\"Start Game \",/*#__PURE__*/React.createElement(\"img\",{src:go,className:\"Start-pic\",alt:\"start game!\"}))));}},{key:\"handleStart\",value:function handleStart(event){var newData={height:this.state.height,width:this.state.width,mines:this.state.mines};this.props.update(newData);}},{key:\"handleChange\",value:function handleChange(event){var target=event.target;var value=target.value;var name=target.name;if(value<0)value=0;if(name===\"width\"||name===\"height\"){value=Math.min(value,300);}if(name===\"mines\"){value=Math.min(value,this.state.height*this.state.width);}this.setState(_defineProperty({},name,value));}},{key:\"render\",value:function render(){return this.GameStatus();}}]);return GameHeader;}(React.Component);export default GameHeader;","map":{"version":3,"sources":["C:/hometaskwix/2/src/components/gameHeader.js"],"names":["React","win","lose","go","mines","width","height","flags","GameHeader","props","state","GameStatus","bind","handleChange","handleStart","elem","picMap","status","StartNewGame","toUpperCase","flagsCount","good","bad","map","curr","toLowerCase","event","newData","update","target","value","name","Math","min","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport win from '../images/win.png';\r\nimport lose from '../images/lose.png';\r\nimport go from '../images/go.png';\r\nimport mines from '../images/bomb.png';\r\nimport width from '../images/width.png';\r\nimport height from '../images/height.png';\r\nimport flags from '../images/flags.png';\r\n\r\n\r\nclass GameHeader extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {width: 10, height: 10, mines: 10}\r\n        this.GameStatus = this.GameStatus.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleStart = this.handleStart.bind(this);\r\n    }\r\n\r\n    GameStatus () {\r\n        let elem;\r\n        var picMap ={win, lose, width, height, mines }\r\n\r\n        if (this.props.status === \"pre\") {\r\n            return (<div>\r\n                <h1>\r\n                    Mine Sweeper <img src={mines} className={\"Head-pic\"}/>\r\n                </h1>                \r\n                {this.StartNewGame()}\r\n            </div>);            \r\n        }\r\n\r\n        if (this.props.status === \"win\" || this.props.status === \"lose\") {\r\n            elem = <div>\r\n                <h2>You {this.props.status.toUpperCase()}! \r\n                <img src={picMap[this.props.status]} className={\"Win-pic\"} alt={this.props.status}/></h2>\r\n                {this.StartNewGame()}\r\n            </div>;\r\n        }\r\n        else {\r\n            let flagsCount = this.props.mines - (this.props.flags.good + this.props.flags.bad);\r\n            elem = <div>\r\n                <h1>\r\n                    {[\"Height\", \"Width\", \"Mines\"].map(curr => {return <span className=\"Header-title\">\r\n                        <img src={picMap[curr.toLowerCase()]} className={\"Header-pic\"} alt={curr}/> {curr} {this.props[curr.toLowerCase()]}\r\n                    </span>})}\r\n                    <br></br>\r\n                    <span className=\"Header-title\">\r\n                        <img src={flags} className={\"Header-pic\"} alt=\"flags\"/> Remaining Flags {flagsCount}\r\n                    </span>\r\n                </h1>\r\n                </div>;\r\n        }\r\n        return elem;\r\n    }\r\n\r\n    StartNewGame () {\r\n        return (<div>\r\n            <h3>Do you want to start a new game?</h3>\r\n            <span className=\"Header-title\">Board Width: <input  type=\"number\" \r\n                                                                value={this.state.width}\r\n                                                                name=\"width\"\r\n                                                                min=\"0\"\r\n                                                                max=\"300\"\r\n                                                                onChange={this.handleChange}\r\n                                                                className=\"Game-input\"></input> \r\n            </span>\r\n            <span className=\"Header-title\">Board Height: <input type=\"number\" \r\n                                                                value={this.state.height}\r\n                                                                name=\"height\" \r\n                                                                min=\"0\"\r\n                                                                max=\"300\"\r\n                                                                onChange={this.handleChange}\r\n                                                                className=\"Game-input\"></input> \r\n            </span>\r\n            <span className=\"Header-title\">Mines: <input    type=\"number\" \r\n                                                            value={this.state.mines}\r\n                                                            name=\"mines\"\r\n                                                            min=\"0\"\r\n                                                            max={this.state.width * this.state.height}\r\n                                                            onChange={this.handleChange}\r\n                                                            className=\"Game-input\"></input> \r\n            </span>\r\n            <div onClick={this.handleStart}>\r\n                <h2>\r\n                    Start Game <img src={go} className={\"Start-pic\"} alt=\"start game!\"/>\r\n                </h2>\r\n            </div>\r\n        </div>);  \r\n    }\r\n\r\n    handleStart(event) {\r\n        const newData = {\r\n            height: this.state.height,\r\n            width: this.state.width,\r\n            mines: this.state.mines,\r\n        }\r\n        this.props.update(newData);\r\n    }\r\n\r\n    handleChange (event) {\r\n        const target = event.target;\r\n        let value = target.value;\r\n        const name = target.name;\r\n\r\n        if (value < 0) value = 0;\r\n\r\n        if (name === \"width\" || name === \"height\") {\r\n            value = Math.min(value, 300);\r\n        }\r\n        \r\n        if (name === \"mines\") {\r\n            value = Math.min(value ,this.state.height * this.state.width);\r\n        }\r\n\r\n        this.setState({[name]:value});\r\n    }\r\n\r\n    render() {\r\n      return this.GameStatus();\r\n    }\r\n  }\r\n\r\nexport default GameHeader;\r\n"]},"metadata":{},"sourceType":"module"}